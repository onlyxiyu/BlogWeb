"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/real-threats";
exports.ids = ["pages/api/real-threats"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "node-fetch":
/*!*****************************!*\
  !*** external "node-fetch" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("node-fetch");;

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("dns");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Freal-threats&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Creal-threats.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Freal-threats&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Creal-threats.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_real_threats_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\real-threats.js */ \"(api)/./pages/api/real-threats.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_real_threats_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_real_threats_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_real_threats_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_real_threats_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/real-threats\",\n        pathname: \"/api/real-threats\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_real_threats_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnJlYWwtdGhyZWF0cyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDcmVhbC10aHJlYXRzLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQzBEO0FBQzFEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx1REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsdURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFpLXhpeXUtYmxvZy8/OTBkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXNcXFxcYXBpXFxcXHJlYWwtdGhyZWF0cy5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3JlYWwtdGhyZWF0c1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3JlYWwtdGhyZWF0c1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Freal-threats&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Creal-threats.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/real-threats.js":
/*!***********************************!*\
  !*** ./pages/api/real-threats.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var net__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! net */ \"net\");\n/* harmony import */ var net__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(net__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var dns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dns */ \"dns\");\n/* harmony import */ var dns__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dns__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! node-fetch */ \"node-fetch\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([node_fetch__WEBPACK_IMPORTED_MODULE_4__]);\nnode_fetch__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\nconst execPromise = util__WEBPACK_IMPORTED_MODULE_1___default().promisify(child_process__WEBPACK_IMPORTED_MODULE_0__.exec);\nconst dnsResolve = util__WEBPACK_IMPORTED_MODULE_1___default().promisify((dns__WEBPACK_IMPORTED_MODULE_3___default().resolve));\n// 缓存数据\nlet threatCache = {\n    attacks: [],\n    totalAttacks: 0,\n    topCountry: \"未知\",\n    topAttackType: \"未知\",\n    lastUpdated: null\n};\n// 可疑端口列表\nconst suspiciousPorts = {\n    22: \"SSH暴力破解\",\n    23: \"Telnet攻击\",\n    3389: \"RDP攻击\",\n    80: \"Web攻击\",\n    443: \"Web攻击\",\n    1433: \"SQL注入\",\n    3306: \"MySQL攻击\",\n    6379: \"Redis未授权\",\n    27017: \"MongoDB攻击\"\n};\n// IP 地理位置缓存\nconst ipLocationCache = new Map();\nconst IP_CACHE_DURATION = 3600000; // 1小时缓存\nconst IP_REQUEST_INTERVAL = 1000; // 每个 IP 请求间隔 1 秒\nlet lastRequestTime = 0;\n// 带延迟的请求函数\nasync function delayedFetch(url) {\n    const now = Date.now();\n    const timeToWait = Math.max(0, IP_REQUEST_INTERVAL - (now - lastRequestTime));\n    if (timeToWait > 0) {\n        await new Promise((resolve)=>setTimeout(resolve, timeToWait));\n    }\n    lastRequestTime = Date.now();\n    return (0,node_fetch__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(url);\n}\n// 获取 IP 地理位置信息\nasync function getIpLocation(ip) {\n    // 检查缓存\n    const cached = ipLocationCache.get(ip);\n    if (cached && Date.now() - cached.timestamp < IP_CACHE_DURATION) {\n        return cached.data;\n    }\n    try {\n        const response = await delayedFetch(`https://api.mir6.com/api/ip?ip=${ip}&type=ini`);\n        const text = await response.text();\n        // 解析返回的 ini 格式数据\n        const data = {};\n        text.split(\"\\n\").forEach((line)=>{\n            const [key, value] = line.split(\"=\");\n            if (key && value) {\n                data[key.trim()] = value.trim();\n            }\n        });\n        if (data.ip) {\n            const locationData = {\n                ip: data.ip,\n                coords: getLocationCoords(data.city, data.province),\n                city: data.city?.replace(\"市\", \"\") || \"未知\",\n                country: data.countryCode || \"UN\",\n                region: data.province?.replace(\"省\", \"\") || \"未知\",\n                isp: data.isp || \"未知\",\n                district: data.districts || \"未知\",\n                network: data.net || \"未知\"\n            };\n            // 更新缓存\n            ipLocationCache.set(ip, {\n                data: locationData,\n                timestamp: Date.now()\n            });\n            return locationData;\n        }\n        throw new Error(\"无效的响应数据\");\n    } catch (error) {\n        console.warn(`无法获取IP ${ip} 的地理位置:`, error);\n        return {\n            ip: ip,\n            coords: [\n                35.0,\n                105.0\n            ],\n            city: \"未知\",\n            country: \"UN\",\n            region: \"未知\",\n            isp: \"未知\",\n            district: \"未知\",\n            network: \"未知\"\n        };\n    }\n}\n// 根据城市和省份获取坐标\nfunction getLocationCoords(city, province) {\n    // 移除\"市\"和\"省\"后缀\n    city = city?.replace(\"市\", \"\");\n    province = province?.replace(\"省\", \"\");\n    // 使用城市坐标映射表\n    const cityCoords = {\n        \"济宁\": [\n            35.4150,\n            116.5870\n        ],\n        \"北京\": [\n            39.9042,\n            116.4074\n        ],\n        \"上海\": [\n            31.2304,\n            121.4737\n        ],\n        \"广州\": [\n            23.1291,\n            113.2644\n        ],\n        \"深圳\": [\n            22.5431,\n            114.0579\n        ],\n        \"成都\": [\n            30.5728,\n            104.0668\n        ],\n        \"杭州\": [\n            30.2741,\n            120.1551\n        ],\n        \"武汉\": [\n            30.5928,\n            114.3055\n        ]\n    };\n    // 使用省会城市坐标映射表\n    const provinceCoords = {\n        \"山东\": [\n            36.6512,\n            117.0200\n        ],\n        \"河南\": [\n            34.7472,\n            113.6253\n        ],\n        \"河北\": [\n            38.0428,\n            114.5149\n        ],\n        \"四川\": [\n            30.5728,\n            104.0668\n        ],\n        \"浙江\": [\n            30.2741,\n            120.1551\n        ],\n        \"湖北\": [\n            30.5928,\n            114.3055\n        ] // 武汉\n    };\n    return cityCoords[city] || provinceCoords[province] || [\n        35.0,\n        105.0\n    ];\n}\nasync function getServerLocation() {\n    try {\n        const response = await (0,node_fetch__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(`http://localhost:${process.env.PORT || 3000}/api/server-location`);\n        if (!response.ok) throw new Error(\"无法获取服务器位置\");\n        return await response.json();\n    } catch (error) {\n        console.warn(\"获取服务器位置失败，使用默认位置:\", error);\n        return {\n            ip: \"127.0.0.1\",\n            coords: [\n                43.825592,\n                87.616848\n            ],\n            city: \"乌鲁木齐\",\n            region: \"新疆\",\n            country: \"CN\",\n            isDefault: true\n        };\n    }\n}\nasync function checkNetworkConnections() {\n    try {\n        const { stdout } = await execPromise(\"netstat -n | findstr ESTABLISHED\");\n        const connections = stdout.split(\"\\n\").filter(Boolean);\n        const attacks = [];\n        // 使用 Set 去重重复的 IP\n        const uniqueIps = new Set();\n        for (const connection of connections){\n            const parts = connection.trim().split(/\\s+/);\n            if (parts.length >= 4) {\n                const [proto, localAddr, remoteAddr, state] = parts;\n                const remoteIp = remoteAddr.split(\":\")[0];\n                const remotePort = parseInt(remoteAddr.split(\":\")[1]);\n                // 检查是否是可疑端口且 IP 未处理过\n                if (suspiciousPorts[remotePort] && !uniqueIps.has(remoteIp)) {\n                    uniqueIps.add(remoteIp);\n                    const locationData = await getIpLocation(remoteIp);\n                    attacks.push({\n                        id: `attack-${Date.now()}-${remoteIp}`,\n                        source: locationData,\n                        type: suspiciousPorts[remotePort],\n                        timestamp: new Date().toISOString(),\n                        severity: 7\n                    });\n                }\n            }\n        }\n        return attacks;\n    } catch (error) {\n        console.error(\"检查网络连接失败:\", error);\n        return [];\n    }\n}\nasync function parseLogFiles() {\n    try {\n        if (threatCache.lastUpdated && Date.now() - threatCache.lastUpdated < 10000) {\n            return threatCache;\n        }\n        const serverLocation = await getServerLocation();\n        const target = {\n            ip: serverLocation.ip,\n            coords: serverLocation.coords,\n            city: serverLocation.city,\n            country: serverLocation.country\n        };\n        // 获取实时网络连接和威胁\n        const attacks = await checkNetworkConnections();\n        // 为每个攻击添加目标信息\n        attacks.forEach((attack)=>{\n            attack.target = target;\n        });\n        // 计算统计数据\n        const countryCount = {};\n        const typeCount = {};\n        attacks.forEach((attack)=>{\n            countryCount[attack.source.country] = (countryCount[attack.source.country] || 0) + 1;\n            typeCount[attack.type] = (typeCount[attack.type] || 0) + 1;\n        });\n        // 找出最常见的国家和攻击类型\n        let topCountry = Object.entries(countryCount).sort(([, a], [, b])=>b - a)[0]?.[0] || \"未知\";\n        let topAttackType = Object.entries(typeCount).sort(([, a], [, b])=>b - a)[0]?.[0] || \"未知\";\n        // 更新缓存\n        threatCache = {\n            attacks: [\n                ...threatCache.attacks,\n                ...attacks\n            ].slice(-100),\n            totalAttacks: threatCache.totalAttacks + attacks.length,\n            topCountry,\n            topAttackType,\n            lastUpdated: Date.now()\n        };\n        return threatCache;\n    } catch (error) {\n        console.error(\"分析威胁数据时出错:\", error);\n        return threatCache;\n    }\n}\nasync function handler(req, res) {\n    try {\n        const threatData = await parseLogFiles();\n        res.status(200).json(threatData);\n    } catch (error) {\n        console.error(\"处理威胁数据请求时出错:\", error);\n        res.status(500).json({\n            error: \"获取威胁数据失败\",\n            message: error.message\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BQU8sQ0FBQ0gsY0FDN0JJLElBQUksQ0FBQyxDQUFDLEdBQUVDLEVBQUUsRUFBRSxHQUFFQyxFQUFFLEdBQUtBLElBQUlELEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUk7UUFFMUMsSUFBSTVGLGdCQUFnQnlGLE9BQU9DLE9BQU8sQ0FBQ0YsV0FDaENHLElBQUksQ0FBQyxDQUFDLEdBQUVDLEVBQUUsRUFBRSxHQUFFQyxFQUFFLEdBQUtBLElBQUlELEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUk7UUFFMUMsT0FBTztRQUNQaEcsY0FBYztZQUNaQyxTQUFTO21CQUFJRCxZQUFZQyxPQUFPO21CQUFLQTthQUFRLENBQUNpRyxLQUFLLENBQUMsQ0FBQztZQUNyRGhHLGNBQWNGLFlBQVlFLFlBQVksR0FBR0QsUUFBUXNFLE1BQU07WUFDdkRwRTtZQUNBQztZQUNBQyxhQUFhVSxLQUFLRCxHQUFHO1FBQ3ZCO1FBRUEsT0FBT2Q7SUFDVCxFQUFFLE9BQU9rRCxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxjQUFjQTtRQUM1QixPQUFPbEQ7SUFDVDtBQUNGO0FBRWUsZUFBZW1HLFFBQVFDLEdBQUcsRUFBRUMsR0FBRztJQUM1QyxJQUFJO1FBQ0YsTUFBTUMsYUFBYSxNQUFNZjtRQUN6QmMsSUFBSUUsTUFBTSxDQUFDLEtBQUszQyxJQUFJLENBQUMwQztJQUN2QixFQUFFLE9BQU9wRCxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxnQkFBZ0JBO1FBQzlCbUQsSUFBSUUsTUFBTSxDQUFDLEtBQUszQyxJQUFJLENBQUM7WUFDbkJWLE9BQU87WUFDUHNELFNBQVN0RCxNQUFNc0QsT0FBTztRQUN4QjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYWkteGl5dS1ibG9nLy4vcGFnZXMvYXBpL3JlYWwtdGhyZWF0cy5qcz8zNGNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4ZWMgfSBmcm9tICdjaGlsZF9wcm9jZXNzJztcclxuaW1wb3J0IHV0aWwgZnJvbSAndXRpbCc7XHJcbmltcG9ydCBuZXQgZnJvbSAnbmV0JztcclxuaW1wb3J0IGRucyBmcm9tICdkbnMnO1xyXG5pbXBvcnQgZmV0Y2ggZnJvbSAnbm9kZS1mZXRjaCc7XHJcblxyXG5jb25zdCBleGVjUHJvbWlzZSA9IHV0aWwucHJvbWlzaWZ5KGV4ZWMpO1xyXG5jb25zdCBkbnNSZXNvbHZlID0gdXRpbC5wcm9taXNpZnkoZG5zLnJlc29sdmUpO1xyXG5cclxuLy8g57yT5a2Y5pWw5o2uXHJcbmxldCB0aHJlYXRDYWNoZSA9IHtcclxuICBhdHRhY2tzOiBbXSxcclxuICB0b3RhbEF0dGFja3M6IDAsXHJcbiAgdG9wQ291bnRyeTogJ+acquefpScsXHJcbiAgdG9wQXR0YWNrVHlwZTogJ+acquefpScsXHJcbiAgbGFzdFVwZGF0ZWQ6IG51bGxcclxufTtcclxuXHJcbi8vIOWPr+eWkeerr+WPo+WIl+ihqFxyXG5jb25zdCBzdXNwaWNpb3VzUG9ydHMgPSB7XHJcbiAgMjI6ICdTU0jmmrTlipvnoLTop6MnLFxyXG4gIDIzOiAnVGVsbmV05pS75Ye7JyxcclxuICAzMzg5OiAnUkRQ5pS75Ye7JyxcclxuICA4MDogJ1dlYuaUu+WHuycsXHJcbiAgNDQzOiAnV2Vi5pS75Ye7JyxcclxuICAxNDMzOiAnU1FM5rOo5YWlJyxcclxuICAzMzA2OiAnTXlTUUzmlLvlh7snLFxyXG4gIDYzNzk6ICdSZWRpc+acquaOiOadgycsXHJcbiAgMjcwMTc6ICdNb25nb0RC5pS75Ye7J1xyXG59O1xyXG5cclxuLy8gSVAg5Zyw55CG5L2N572u57yT5a2YXHJcbmNvbnN0IGlwTG9jYXRpb25DYWNoZSA9IG5ldyBNYXAoKTtcclxuY29uc3QgSVBfQ0FDSEVfRFVSQVRJT04gPSAzNjAwMDAwOyAvLyAx5bCP5pe257yT5a2YXHJcbmNvbnN0IElQX1JFUVVFU1RfSU5URVJWQUwgPSAxMDAwOyAvLyDmr4/kuKogSVAg6K+35rGC6Ze06ZqUIDEg56eSXHJcbmxldCBsYXN0UmVxdWVzdFRpbWUgPSAwO1xyXG5cclxuLy8g5bim5bu26L+f55qE6K+35rGC5Ye95pWwXHJcbmFzeW5jIGZ1bmN0aW9uIGRlbGF5ZWRGZXRjaCh1cmwpIHtcclxuICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xyXG4gIGNvbnN0IHRpbWVUb1dhaXQgPSBNYXRoLm1heCgwLCBJUF9SRVFVRVNUX0lOVEVSVkFMIC0gKG5vdyAtIGxhc3RSZXF1ZXN0VGltZSkpO1xyXG4gIFxyXG4gIGlmICh0aW1lVG9XYWl0ID4gMCkge1xyXG4gICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIHRpbWVUb1dhaXQpKTtcclxuICB9XHJcbiAgXHJcbiAgbGFzdFJlcXVlc3RUaW1lID0gRGF0ZS5ub3coKTtcclxuICByZXR1cm4gZmV0Y2godXJsKTtcclxufVxyXG5cclxuLy8g6I635Y+WIElQIOWcsOeQhuS9jee9ruS/oeaBr1xyXG5hc3luYyBmdW5jdGlvbiBnZXRJcExvY2F0aW9uKGlwKSB7XHJcbiAgLy8g5qOA5p+l57yT5a2YXHJcbiAgY29uc3QgY2FjaGVkID0gaXBMb2NhdGlvbkNhY2hlLmdldChpcCk7XHJcbiAgaWYgKGNhY2hlZCAmJiBEYXRlLm5vdygpIC0gY2FjaGVkLnRpbWVzdGFtcCA8IElQX0NBQ0hFX0RVUkFUSU9OKSB7XHJcbiAgICByZXR1cm4gY2FjaGVkLmRhdGE7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkZWxheWVkRmV0Y2goYGh0dHBzOi8vYXBpLm1pcjYuY29tL2FwaS9pcD9pcD0ke2lwfSZ0eXBlPWluaWApO1xyXG4gICAgY29uc3QgdGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcclxuICAgIFxyXG4gICAgLy8g6Kej5p6Q6L+U5Zue55qEIGluaSDmoLzlvI/mlbDmja5cclxuICAgIGNvbnN0IGRhdGEgPSB7fTtcclxuICAgIHRleHQuc3BsaXQoJ1xcbicpLmZvckVhY2gobGluZSA9PiB7XHJcbiAgICAgIGNvbnN0IFtrZXksIHZhbHVlXSA9IGxpbmUuc3BsaXQoJz0nKTtcclxuICAgICAgaWYgKGtleSAmJiB2YWx1ZSkge1xyXG4gICAgICAgIGRhdGFba2V5LnRyaW0oKV0gPSB2YWx1ZS50cmltKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBpZiAoZGF0YS5pcCkge1xyXG4gICAgICBjb25zdCBsb2NhdGlvbkRhdGEgPSB7XHJcbiAgICAgICAgaXA6IGRhdGEuaXAsXHJcbiAgICAgICAgY29vcmRzOiBnZXRMb2NhdGlvbkNvb3JkcyhkYXRhLmNpdHksIGRhdGEucHJvdmluY2UpLFxyXG4gICAgICAgIGNpdHk6IGRhdGEuY2l0eT8ucmVwbGFjZSgn5biCJywgJycpIHx8ICfmnKrnn6UnLFxyXG4gICAgICAgIGNvdW50cnk6IGRhdGEuY291bnRyeUNvZGUgfHwgJ1VOJyxcclxuICAgICAgICByZWdpb246IGRhdGEucHJvdmluY2U/LnJlcGxhY2UoJ+ecgScsICcnKSB8fCAn5pyq55+lJyxcclxuICAgICAgICBpc3A6IGRhdGEuaXNwIHx8ICfmnKrnn6UnLFxyXG4gICAgICAgIGRpc3RyaWN0OiBkYXRhLmRpc3RyaWN0cyB8fCAn5pyq55+lJyxcclxuICAgICAgICBuZXR3b3JrOiBkYXRhLm5ldCB8fCAn5pyq55+lJ1xyXG4gICAgICB9O1xyXG4gICAgICBcclxuICAgICAgLy8g5pu05paw57yT5a2YXHJcbiAgICAgIGlwTG9jYXRpb25DYWNoZS5zZXQoaXAsIHtcclxuICAgICAgICBkYXRhOiBsb2NhdGlvbkRhdGEsXHJcbiAgICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpXHJcbiAgICAgIH0pO1xyXG4gICAgICBcclxuICAgICAgcmV0dXJuIGxvY2F0aW9uRGF0YTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgdGhyb3cgbmV3IEVycm9yKCfml6DmlYjnmoTlk43lupTmlbDmja4nKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS53YXJuKGDml6Dms5Xojrflj5ZJUCAke2lwfSDnmoTlnLDnkIbkvY3nva46YCwgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgaXA6IGlwLFxyXG4gICAgICBjb29yZHM6IFszNS4wLCAxMDUuMF0sIC8vIOm7mOiupOS9v+eUqOS4reWbveS4reW/g+eCueWdkOagh1xyXG4gICAgICBjaXR5OiAn5pyq55+lJyxcclxuICAgICAgY291bnRyeTogJ1VOJyxcclxuICAgICAgcmVnaW9uOiAn5pyq55+lJyxcclxuICAgICAgaXNwOiAn5pyq55+lJyxcclxuICAgICAgZGlzdHJpY3Q6ICfmnKrnn6UnLFxyXG4gICAgICBuZXR3b3JrOiAn5pyq55+lJ1xyXG4gICAgfTtcclxuICB9XHJcbn1cclxuXHJcbi8vIOagueaNruWfjuW4guWSjOecgeS7veiOt+WPluWdkOagh1xyXG5mdW5jdGlvbiBnZXRMb2NhdGlvbkNvb3JkcyhjaXR5LCBwcm92aW5jZSkge1xyXG4gIC8vIOenu+mZpFwi5biCXCLlkoxcIuecgVwi5ZCO57yAXHJcbiAgY2l0eSA9IGNpdHk/LnJlcGxhY2UoJ+W4gicsICcnKTtcclxuICBwcm92aW5jZSA9IHByb3ZpbmNlPy5yZXBsYWNlKCfnnIEnLCAnJyk7XHJcbiAgXHJcbiAgLy8g5L2/55So5Z+O5biC5Z2Q5qCH5pig5bCE6KGoXHJcbiAgY29uc3QgY2l0eUNvb3JkcyA9IHtcclxuICAgICfmtY7lroEnOiBbMzUuNDE1MCwgMTE2LjU4NzBdLFxyXG4gICAgJ+WMl+S6rCc6IFszOS45MDQyLCAxMTYuNDA3NF0sXHJcbiAgICAn5LiK5rW3JzogWzMxLjIzMDQsIDEyMS40NzM3XSxcclxuICAgICflub/lt54nOiBbMjMuMTI5MSwgMTEzLjI2NDRdLFxyXG4gICAgJ+a3seWcsyc6IFsyMi41NDMxLCAxMTQuMDU3OV0sXHJcbiAgICAn5oiQ6YO9JzogWzMwLjU3MjgsIDEwNC4wNjY4XSxcclxuICAgICfmna3lt54nOiBbMzAuMjc0MSwgMTIwLjE1NTFdLFxyXG4gICAgJ+atpuaxiSc6IFszMC41OTI4LCAxMTQuMzA1NV1cclxuICB9O1xyXG5cclxuICAvLyDkvb/nlKjnnIHkvJrln47luILlnZDmoIfmmKDlsITooahcclxuICBjb25zdCBwcm92aW5jZUNvb3JkcyA9IHtcclxuICAgICflsbHkuJwnOiBbMzYuNjUxMiwgMTE3LjAyMDBdLCAvLyDmtY7ljZdcclxuICAgICfmsrPljZcnOiBbMzQuNzQ3MiwgMTEzLjYyNTNdLCAvLyDpg5Hlt55cclxuICAgICfmsrPljJcnOiBbMzguMDQyOCwgMTE0LjUxNDldLCAvLyDnn7PlrrbluoRcclxuICAgICflm5vlt50nOiBbMzAuNTcyOCwgMTA0LjA2NjhdLCAvLyDmiJDpg71cclxuICAgICfmtZnmsZ8nOiBbMzAuMjc0MSwgMTIwLjE1NTFdLCAvLyDmna3lt55cclxuICAgICfmuZbljJcnOiBbMzAuNTkyOCwgMTE0LjMwNTVdICAvLyDmrabmsYlcclxuICB9O1xyXG5cclxuICByZXR1cm4gY2l0eUNvb3Jkc1tjaXR5XSB8fCBwcm92aW5jZUNvb3Jkc1twcm92aW5jZV0gfHwgWzM1LjAsIDEwNS4wXTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyTG9jYXRpb24oKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHA6Ly9sb2NhbGhvc3Q6JHtwcm9jZXNzLmVudi5QT1JUIHx8IDMwMDB9L2FwaS9zZXJ2ZXItbG9jYXRpb25gKTtcclxuICAgIGlmICghcmVzcG9uc2Uub2spIHRocm93IG5ldyBFcnJvcign5peg5rOV6I635Y+W5pyN5Yqh5Zmo5L2N572uJyk7XHJcbiAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLndhcm4oJ+iOt+WPluacjeWKoeWZqOS9jee9ruWksei0pe+8jOS9v+eUqOm7mOiupOS9jee9rjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBpcDogJzEyNy4wLjAuMScsXHJcbiAgICAgIGNvb3JkczogWzQzLjgyNTU5MiwgODcuNjE2ODQ4XSxcclxuICAgICAgY2l0eTogXCLkuYzpsoHmnKjpvZBcIixcclxuICAgICAgcmVnaW9uOiBcIuaWsOeWhlwiLFxyXG4gICAgICBjb3VudHJ5OiBcIkNOXCIsXHJcbiAgICAgIGlzRGVmYXVsdDogdHJ1ZVxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGNoZWNrTmV0d29ya0Nvbm5lY3Rpb25zKCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IHN0ZG91dCB9ID0gYXdhaXQgZXhlY1Byb21pc2UoJ25ldHN0YXQgLW4gfCBmaW5kc3RyIEVTVEFCTElTSEVEJyk7XHJcbiAgICBjb25zdCBjb25uZWN0aW9ucyA9IHN0ZG91dC5zcGxpdCgnXFxuJykuZmlsdGVyKEJvb2xlYW4pO1xyXG4gICAgXHJcbiAgICBjb25zdCBhdHRhY2tzID0gW107XHJcbiAgICBcclxuICAgIC8vIOS9v+eUqCBTZXQg5Y676YeN6YeN5aSN55qEIElQXHJcbiAgICBjb25zdCB1bmlxdWVJcHMgPSBuZXcgU2V0KCk7XHJcbiAgICBmb3IgKGNvbnN0IGNvbm5lY3Rpb24gb2YgY29ubmVjdGlvbnMpIHtcclxuICAgICAgY29uc3QgcGFydHMgPSBjb25uZWN0aW9uLnRyaW0oKS5zcGxpdCgvXFxzKy8pO1xyXG4gICAgICBpZiAocGFydHMubGVuZ3RoID49IDQpIHtcclxuICAgICAgICBjb25zdCBbcHJvdG8sIGxvY2FsQWRkciwgcmVtb3RlQWRkciwgc3RhdGVdID0gcGFydHM7XHJcbiAgICAgICAgY29uc3QgcmVtb3RlSXAgPSByZW1vdGVBZGRyLnNwbGl0KCc6JylbMF07XHJcbiAgICAgICAgY29uc3QgcmVtb3RlUG9ydCA9IHBhcnNlSW50KHJlbW90ZUFkZHIuc3BsaXQoJzonKVsxXSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8g5qOA5p+l5piv5ZCm5piv5Y+v55aR56uv5Y+j5LiUIElQIOacquWkhOeQhui/h1xyXG4gICAgICAgIGlmIChzdXNwaWNpb3VzUG9ydHNbcmVtb3RlUG9ydF0gJiYgIXVuaXF1ZUlwcy5oYXMocmVtb3RlSXApKSB7XHJcbiAgICAgICAgICB1bmlxdWVJcHMuYWRkKHJlbW90ZUlwKTtcclxuICAgICAgICAgIFxyXG4gICAgICAgICAgY29uc3QgbG9jYXRpb25EYXRhID0gYXdhaXQgZ2V0SXBMb2NhdGlvbihyZW1vdGVJcCk7XHJcbiAgICAgICAgICBhdHRhY2tzLnB1c2goe1xyXG4gICAgICAgICAgICBpZDogYGF0dGFjay0ke0RhdGUubm93KCl9LSR7cmVtb3RlSXB9YCxcclxuICAgICAgICAgICAgc291cmNlOiBsb2NhdGlvbkRhdGEsXHJcbiAgICAgICAgICAgIHR5cGU6IHN1c3BpY2lvdXNQb3J0c1tyZW1vdGVQb3J0XSxcclxuICAgICAgICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgICAgICAgIHNldmVyaXR5OiA3XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgcmV0dXJuIGF0dGFja3M7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ+ajgOafpee9kee7nOi/nuaOpeWksei0pTonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gW107XHJcbiAgfVxyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBwYXJzZUxvZ0ZpbGVzKCkge1xyXG4gIHRyeSB7XHJcbiAgICBpZiAodGhyZWF0Q2FjaGUubGFzdFVwZGF0ZWQgJiYgKERhdGUubm93KCkgLSB0aHJlYXRDYWNoZS5sYXN0VXBkYXRlZCkgPCAxMDAwMCkge1xyXG4gICAgICByZXR1cm4gdGhyZWF0Q2FjaGU7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc2VydmVyTG9jYXRpb24gPSBhd2FpdCBnZXRTZXJ2ZXJMb2NhdGlvbigpO1xyXG4gICAgY29uc3QgdGFyZ2V0ID0ge1xyXG4gICAgICBpcDogc2VydmVyTG9jYXRpb24uaXAsXHJcbiAgICAgIGNvb3Jkczogc2VydmVyTG9jYXRpb24uY29vcmRzLFxyXG4gICAgICBjaXR5OiBzZXJ2ZXJMb2NhdGlvbi5jaXR5LFxyXG4gICAgICBjb3VudHJ5OiBzZXJ2ZXJMb2NhdGlvbi5jb3VudHJ5XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIOiOt+WPluWunuaXtue9kee7nOi/nuaOpeWSjOWogeiDgVxyXG4gICAgY29uc3QgYXR0YWNrcyA9IGF3YWl0IGNoZWNrTmV0d29ya0Nvbm5lY3Rpb25zKCk7XHJcbiAgICBcclxuICAgIC8vIOS4uuavj+S4quaUu+WHu+a3u+WKoOebruagh+S/oeaBr1xyXG4gICAgYXR0YWNrcy5mb3JFYWNoKGF0dGFjayA9PiB7XHJcbiAgICAgIGF0dGFjay50YXJnZXQgPSB0YXJnZXQ7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyDorqHnrpfnu5/orqHmlbDmja5cclxuICAgIGNvbnN0IGNvdW50cnlDb3VudCA9IHt9O1xyXG4gICAgY29uc3QgdHlwZUNvdW50ID0ge307XHJcbiAgICBcclxuICAgIGF0dGFja3MuZm9yRWFjaChhdHRhY2sgPT4ge1xyXG4gICAgICBjb3VudHJ5Q291bnRbYXR0YWNrLnNvdXJjZS5jb3VudHJ5XSA9IChjb3VudHJ5Q291bnRbYXR0YWNrLnNvdXJjZS5jb3VudHJ5XSB8fCAwKSArIDE7XHJcbiAgICAgIHR5cGVDb3VudFthdHRhY2sudHlwZV0gPSAodHlwZUNvdW50W2F0dGFjay50eXBlXSB8fCAwKSArIDE7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyDmib7lh7rmnIDluLjop4HnmoTlm73lrrblkozmlLvlh7vnsbvlnotcclxuICAgIGxldCB0b3BDb3VudHJ5ID0gT2JqZWN0LmVudHJpZXMoY291bnRyeUNvdW50KVxyXG4gICAgICAuc29ydCgoWyxhXSwgWyxiXSkgPT4gYiAtIGEpWzBdPy5bMF0gfHwgJ+acquefpSc7XHJcbiAgICBcclxuICAgIGxldCB0b3BBdHRhY2tUeXBlID0gT2JqZWN0LmVudHJpZXModHlwZUNvdW50KVxyXG4gICAgICAuc29ydCgoWyxhXSwgWyxiXSkgPT4gYiAtIGEpWzBdPy5bMF0gfHwgJ+acquefpSc7XHJcblxyXG4gICAgLy8g5pu05paw57yT5a2YXHJcbiAgICB0aHJlYXRDYWNoZSA9IHtcclxuICAgICAgYXR0YWNrczogWy4uLnRocmVhdENhY2hlLmF0dGFja3MsIC4uLmF0dGFja3NdLnNsaWNlKC0xMDApLFxyXG4gICAgICB0b3RhbEF0dGFja3M6IHRocmVhdENhY2hlLnRvdGFsQXR0YWNrcyArIGF0dGFja3MubGVuZ3RoLFxyXG4gICAgICB0b3BDb3VudHJ5LFxyXG4gICAgICB0b3BBdHRhY2tUeXBlLFxyXG4gICAgICBsYXN0VXBkYXRlZDogRGF0ZS5ub3coKVxyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gdGhyZWF0Q2FjaGU7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ+WIhuaekOWogeiDgeaVsOaNruaXtuWHuumUmTonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gdGhyZWF0Q2FjaGU7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHRocmVhdERhdGEgPSBhd2FpdCBwYXJzZUxvZ0ZpbGVzKCk7XHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih0aHJlYXREYXRhKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcign5aSE55CG5aiB6IOB5pWw5o2u6K+35rGC5pe25Ye66ZSZOicsIGVycm9yKTtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgXHJcbiAgICAgIGVycm9yOiAn6I635Y+W5aiB6IOB5pWw5o2u5aSx6LSlJyxcclxuICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZVxyXG4gICAgfSk7XHJcbiAgfVxyXG59ICJdLCJuYW1lcyI6WyJleGVjIiwidXRpbCIsIm5ldCIsImRucyIsImZldGNoIiwiZXhlY1Byb21pc2UiLCJwcm9taXNpZnkiLCJkbnNSZXNvbHZlIiwicmVzb2x2ZSIsInRocmVhdENhY2hlIiwiYXR0YWNrcyIsInRvdGFsQXR0YWNrcyIsInRvcENvdW50cnkiLCJ0b3BBdHRhY2tUeXBlIiwibGFzdFVwZGF0ZWQiLCJzdXNwaWNpb3VzUG9ydHMiLCJpcExvY2F0aW9uQ2FjaGUiLCJNYXAiLCJJUF9DQUNIRV9EVVJBVElPTiIsIklQX1JFUVVFU1RfSU5URVJWQUwiLCJsYXN0UmVxdWVzdFRpbWUiLCJkZWxheWVkRmV0Y2giLCJ1cmwiLCJub3ciLCJEYXRlIiwidGltZVRvV2FpdCIsIk1hdGgiLCJtYXgiLCJQcm9taXNlIiwic2V0VGltZW91dCIsImdldElwTG9jYXRpb24iLCJpcCIsImNhY2hlZCIsImdldCIsInRpbWVzdGFtcCIsImRhdGEiLCJyZXNwb25zZSIsInRleHQiLCJzcGxpdCIsImZvckVhY2giLCJsaW5lIiwia2V5IiwidmFsdWUiLCJ0cmltIiwibG9jYXRpb25EYXRhIiwiY29vcmRzIiwiZ2V0TG9jYXRpb25Db29yZHMiLCJjaXR5IiwicHJvdmluY2UiLCJyZXBsYWNlIiwiY291bnRyeSIsImNvdW50cnlDb2RlIiwicmVnaW9uIiwiaXNwIiwiZGlzdHJpY3QiLCJkaXN0cmljdHMiLCJuZXR3b3JrIiwic2V0IiwiRXJyb3IiLCJlcnJvciIsImNvbnNvbGUiLCJ3YXJuIiwiY2l0eUNvb3JkcyIsInByb3ZpbmNlQ29vcmRzIiwiZ2V0U2VydmVyTG9jYXRpb24iLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsIm9rIiwianNvbiIsImlzRGVmYXVsdCIsImNoZWNrTmV0d29ya0Nvbm5lY3Rpb25zIiwic3Rkb3V0IiwiY29ubmVjdGlvbnMiLCJmaWx0ZXIiLCJCb29sZWFuIiwidW5pcXVlSXBzIiwiU2V0IiwiY29ubmVjdGlvbiIsInBhcnRzIiwibGVuZ3RoIiwicHJvdG8iLCJsb2NhbEFkZHIiLCJyZW1vdGVBZGRyIiwic3RhdGUiLCJyZW1vdGVJcCIsInJlbW90ZVBvcnQiLCJwYXJzZUludCIsImhhcyIsImFkZCIsInB1c2giLCJpZCIsInNvdXJjZSIsInR5cGUiLCJ0b0lTT1N0cmluZyIsInNldmVyaXR5IiwicGFyc2VMb2dGaWxlcyIsInNlcnZlckxvY2F0aW9uIiwidGFyZ2V0IiwiYXR0YWNrIiwiY291bnRyeUNvdW50IiwidHlwZUNvdW50IiwiT2JqZWN0IiwiZW50cmllcyIsInNvcnQiLCJhIiwiYiIsInNsaWNlIiwiaGFuZGxlciIsInJlcSIsInJlcyIsInRocmVhdERhdGEiLCJzdGF0dXMiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/real-threats.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Freal-threats&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Creal-threats.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();